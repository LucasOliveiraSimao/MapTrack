name: Android Deploy

on:
  pull_request:
    branches: [ "master" ]

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create local.properties
        run: echo "sdk.dir=${{ secrets.SDK_LOCATION }}" > local.properties && echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> local.properties

      - name: Run lint
        run: ./gradlew lintDebug

      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: lint-results-debug.html
          path: app/build/reports/lint-results-debug.html

  unit-test:
    needs: [lint]
    name: Unit Test
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create local.properties
        run: echo "sdk.dir=${{ secrets.SDK_LOCATION }}" > local.properties && echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> local.properties

      - name: Run tests
        run: ./gradlew test

      - name: Upload unit test report
        uses: actions/upload-artifact@v2
        with:
          name: unit_test_report
          path: app/build/reports/tests/testDebugUnitTest/

  package:
    needs: [ unit-test ]
    name: Generate AAB
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create local.properties
        run: echo "sdk.dir=${{ secrets.SDK_LOCATION }}" > local.properties && echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> local.properties

      - name: Build AAB
        run: ./gradlew bundle

      - name: Upload AAB
        uses: actions/upload-artifact@v2
        with:
          name: app-release.aab
          path: app/build/outputs/bundle/release/app-release.aab

  distribute:
    name: Distribute App
    needs: [ package ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
      - uses: actions/checkout@v3

      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'

      - name: Version Bump
        uses: chkfung/android-version-actions@v1.2.1
        with:
          gradlePath: app/build.gradle.kts
          versionCode: ${{ github.run_number }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create local.properties
        run: echo "sdk.dir=${{ secrets.SDK_LOCATION }}" > local.properties && echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> local.properties

      - name: Assemble Release Bundle
        run: ./gradlew bundleRelease

      - name: Sign Release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          alias: ${{ secrets.APP_NAME_KEY }}
          keyPassword: ${{ secrets.APP_NAME_KEY_PASSWORD }}

      - name: Setup Authorization With Google Play Store
        run: echo '${{ secrets.GOOGLE_PLAY_API_AUTH }}' > service_account.json

      - name: Deploy
        uses: r0adkll/upload-google-play@v1.0.19
        with:
          serviceAccountJson: service_account.json
          packageName: com.lucassimao.maptrack
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: production
          status: 'completed'
